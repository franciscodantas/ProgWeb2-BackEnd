{
    "info": {
        "name": "User Management",
        "description": "Collection for testing User, Discipline, and Question endpoints",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Questions",
            "item": [
                {
                    "name": "Create Question",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"title\": \"Example Title\",\n    \"content\": \"Example Content\",\n    \"answer\": \"Example Answer\",\n    \"image\": \"base64ImageString\",\n    \"authorId\": 1,\n    \"disciplineId\": 1\n}"
                        },
                        "url": {
                            "raw": "http://localhost:3000/questions",
                            "protocol": "http",
                            "host": [
                                "localhost"
                            ],
                            "port": "3000",
                            "path": [
                                "questions"
                            ]
                        }
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has correct properties\", function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('id');",
                                    "    pm.expect(jsonData).to.have.property('title');",
                                    "    pm.expect(jsonData).to.have.property('content');",
                                    "    pm.expect(jsonData).to.have.property('answer');",
                                    "    pm.expect(jsonData).to.have.property('image');",
                                    "    pm.expect(jsonData).to.have.property('authorId');",
                                    "    pm.expect(jsonData).to.have.property('disciplineId');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                },
                {
                    "name": "Get All Questions",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "http://localhost:3000/questions",
                            "protocol": "http",
                            "host": [
                                "localhost"
                            ],
                            "port": "3000",
                            "path": [
                                "questions"
                            ]
                        }
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response is an array\", function () {",
                                    "    pm.expect(pm.response.json()).to.be.an('array');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                },
                {
                    "name": "Get Question by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "http://localhost:3000/questions/1",
                            "protocol": "http",
                            "host": [
                                "localhost"
                            ],
                            "port": "3000",
                            "path": [
                                "questions",
                                "1"
                            ]
                        }
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response is an object\", function () {",
                                    "    pm.expect(pm.response.json()).to.be.an('object');",
                                    "});",
                                    "",
                                    "pm.test(\"Response has correct properties\", function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('id');",
                                    "    pm.expect(jsonData).to.have.property('title');",
                                    "    pm.expect(jsonData).to.have.property('content');",
                                    "    pm.expect(jsonData).to.have.property('answer');",
                                    "    pm.expect(jsonData).to.have.property('image');",
                                    "    pm.expect(jsonData).to.have.property('authorId');",
                                    "    pm.expect(jsonData).to.have.property('disciplineId');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                },
                {
                    "name": "Update Question",
                    "request": {
                        "method": "PATCH",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"title\": \"Updated Title\"\n}"
                        },
                        "url": {
                            "raw": "http://localhost:3000/questions/1",
                            "protocol": "http",
                            "host": [
                                "localhost"
                            ],
                            "port": "3000",
                            "path": [
                                "questions",
                                "1"
                            ]
                        }
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has correct properties\", function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('id');",
                                    "    pm.expect(jsonData).to.have.property('title');",
                                    "    pm.expect(jsonData).to.have.property('content');",
                                    "    pm.expect(jsonData).to.have.property('answer');",
                                    "    pm.expect(jsonData).to.have.property('image');",
                                    "    pm.expect(jsonData).to.have.property('authorId');",
                                    "    pm.expect(jsonData).to.have.property('disciplineId');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                },
                {
                    "name": "Delete Question",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "http://localhost:3000/questions/1",
                            "protocol": "http",
                            "host": [
                                "localhost"
                            ],
                            "port": "3000",
                            "path": [
                                "questions",
                                "1"
                            ]
                        }
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 204\", function () {",
                                    "    pm.response.to.have.status(204);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "Disciplines",
            "item": [
                {
                    "name": "Get All Disciplines",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "http://localhost:3000/disciplines",
                            "protocol": "http",
                            "host": [
                                "localhost"
                            ],
                            "port": "3000",
                            "path": [
                                "disciplines"
                            ]
                        }
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response is an array\", function () {",
                                    "    pm.expect(pm.response.json()).to.be.an('array');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                },
                {
                    "name": "Get Discipline by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "http://localhost:3000/disciplines/1",
                            "protocol": "http",
                            "host": [
                                "localhost"
                            ],
                            "port": "3000",
                            "path": [
                                "disciplines",
                                "1"
                            ]
                        }
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response is an object\", function () {",
                                    "    pm.expect(pm.response.json()).to.be.an('object');",
                                    "});",
                                    "",
                                    "pm.test(\"Response has correct properties\", function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('id');",
                                    "    pm.expect(jsonData).to.have.property('courseCode');",
                                    "    pm.expect(jsonData).to.have.property('curriculumCode');",
                                    "    pm.expect(jsonData).to.have.property('subjectCode');",
                                    "    pm.expect(jsonData).to.have.property('name');",
                                    "    pm.expect(jsonData).to.have.property('type');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                },
                {
                    "name": "Search Disciplines",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "http://localhost:3000/disciplines/search?courseCode=ABC123",
                            "protocol": "http",
                            "host": [
                                "localhost"
                            ],
                            "port": "3000",
                            "path": [
                                "disciplines",
                                "search"
                            ],
                            "query": [
                                {
                                    "key": "courseCode",
                                    "value": "ABC123"
                                }
                            ]
                        }
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response is an array\", function () {",
                                    "    pm.expect(pm.response.json()).to.be.an('array');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "Users",
            "item": [
                {
                    "name": "Professors",
                    "item": [
                        {
                            "name": "Get All Professors",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "http://localhost:3000/users/professors",
                                    "protocol": "http",
                                    "host": [
                                        "localhost"
                                    ],
                                    "port": "3000",
                                    "path": [
                                        "users",
                                        "professors"
                                    ]
                                }
                            },
                            "response": [],
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {",
                                            "    pm.response.to.have.status(200);",
                                            "});",
                                            "",
                                            "pm.test(\"Response is an array\", function () {",
                                            "    pm.expect(pm.response.json()).to.be.an('array');",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Students",
                    "item": [
                        {
                            "name": "Get All Students",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "http://localhost:3000/users/students",
                                    "protocol": "http",
                                    "host": [
                                        "localhost"
                                    ],
                                    "port": "3000",
                                    "path": [
                                        "users",
                                        "students"
                                    ]
                                }
                            },
                            "response": [],
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {",
                                            "    pm.response.to.have.status(200);",
                                            "});",
                                            "",
                                            "pm.test(\"Response is an array\", function () {",
                                            "    pm.expect(pm.response.json()).to.be.an('array');",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Admins",
                    "item": [
                        {
                            "name": "Get All Admins",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "http://localhost:3000/users/admins",
                                    "protocol": "http",
                                    "host": [
                                        "localhost"
                                    ],
                                    "port": "3000",
                                    "path": [
                                        "users",
                                        "admins"
                                    ]
                                }
                            },
                            "response": [],
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {",
                                            "    pm.response.to.have.status(200);",
                                            "});",
                                            "",
                                            "pm.test(\"Response is an array\", function () {",
                                            "    pm.expect(pm.response.json()).to.be.an('array');",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}
